@page
@using praktykanciAplikacja.Models



@(
Html.DevExtreme().Form<praktykanciAplikacja.Models.Apprentices>()
    .ColCount(4)
    .Items(items => {

        items.AddSimpleFor(m => m.firstName).DataField("Imie");
        items.AddSimpleFor(m => m.lastName).DataField("Nazwisko");
        items.AddSimpleFor(m => m.desiredPosition).DataField("Stanowisko");
        items.AddSimpleFor(m => m.dateOfBirth).DataField("Data urodzenia");
        items.AddSimple().DataField("Miasto").Name("fCity");
        items.AddSimple().DataField("Ulica").Name("fStreet");
        items.AddSimple().DataField("Numer").Name("fNumber");
    })
)

@{
        <br>
    Html.DevExtreme().Button()
            .Content("Dodaj praktykanta")
            .ID("button1")
            .Render();
        <br>
        <br>
}



<h2>Dodawanie nowych praktykantów</h2>
@(
Html.DevExtreme().DataGrid<Apprentices>()
    .ShowBorders(true)
    .DataSource(d => d.Mvc().Controller("SampleData").LoadAction("Get").Key("id"))
    .Columns(columns => {
        columns.AddFor(m => m.id).Caption("Lp.");
        columns.AddFor(m => m.firstName).Caption("Imie");
        columns.AddFor(m => m.lastName).Caption("Nazwisko");
        columns.AddFor(m => m.desiredPosition).Caption("Stanowisko");
        columns.AddFor(m => m.dateSubmitted).Caption("Data zg³oszenia");
        columns.Add().Caption("Miejsce zamieszkania").CalculateCellValue(
        @<text>
            function(data){
                return [data.addres.street,data.addres.number,data.addres.city].join(" ");
            }
        </text>
);
        columns.AddFor(m => m.dateOfBirth).Caption("Data urodzenia");
    })
    .Paging(p => p.PageSize(6))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .AllowColumnResizing(true)
    .Editing(editing =>
    {
        editing.AllowDeleting(true).UseIcons(true);
        editing.AllowUpdating(true).UseIcons(true);
    })
    .Summary(s => s
        .TotalItems(totalItems => {
            totalItems.AddFor(m => m.id).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems => {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)